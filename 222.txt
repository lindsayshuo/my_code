1\fp16,int8,fp32    transform.py
2\                    create_table.py   加上精度
3、模型的测试                  start_test_pb.py

uff 测试 resnet50.v1   之前那个resnet50的uff是可以跑的  因为输入是224，224,3  ，对于uff模型，NHWC要加这个参数  --uffNHWC




1\trtexec FP16/FP32/INT8   start_test_onnx.py
                 
                           start_test_uff.py
2\ create table.py


nvidia-docker run -it --rm --ipc=host --shm-size=1g --ulimit memlock=-1 --ulimit stack=67108864 -v /root:/workspace/data    inf_gpu_tool:v1.0 bash


10.136.165.21
hisilicon12#$

19979476HEhe@



https://github.com/dmlc/mxnet-memonger
https://arxiv.org/pdf/1604.06174.pdf
https://pan.baidu.com/s/1gTW9gwJR6hlwTuyB6nCkzQ


https://mxnet.apache.org/api/faq/env_var



MXNET_BACKWARD_DO_MIRROR 

MXNET_MEMORY_OPT






export MXNET_BACKWARD_DO_MIRROR=1
#unset MXNET_BACKWARD_DO_MIRROR
#export MXNET_MEMORY_OPT=0
#unset MXNET_MEMORY_OPT
python  train_imagenet.py --network resnet --num-layers 50  --batch-size 32 --gpus 0  --data-train /workspace/data/imagenet_mxnet/train.rec   --dtype float16


https://github.com/apache/incubator-mxnet/blob/master/example/image-classification/train_imagenet.py




https://developer.nvidia.com/cuda-92-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604


#zx add
profiler.set_config(profile_all=True,
                    aggregate_stats=True,
                    continuous_dump=True,
                    filename='profile_output.json')
profiler.set_state('run')
'''
# train with the same
resnet_model.fit(train_iter,
                 optimizer='sgd',
                 optimizer_params={'learning_rate': 0.01},
                 eval_metric='acc',
                 batch_end_callback=mx.callback.Speedometer(batch_size, 1),
                 num_epoch=10)
'''
#zx add
mx.nd.waitall()
profiler.set_state('stop')
#profiler.dump()
print(profiler.dumps())

https://pypi.tuna.tsinghua.edu.cn/packages/ef/4d/7ace07832a63d143c04bd29b5850aad1889213833672b1b3f2f0150d9b66/mxnet_cu102-1.6.0-py2.py3-none-manylinux1_x86_64.whl


python3 train_imagenet.py --benchmark 1 --gpus 0 --network resnet --batch-size 54  --image-shape 3,299,299 --num-epochs 1 --kv-store device

